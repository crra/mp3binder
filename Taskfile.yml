# https://taskfile.dev

version: "3"

includes:
  default:
    taskfile: ./Taskfile_{{OS}}.yaml
    optional: true

vars:
  FOLDER_DIST: "dist"
  REALM: "mp3binder"

  MP3BINDER_CLI_NAME: mp3binder
  MP3BINDER_CLI_MAIN: "./cmd/tui"

  #MP3BINDER_NAME: mp3binder_gui
  #MP3BINDER_MAIN: "./cmd/gui"

  GIT_COMMIT:
    sh: git describe --tags --always | sed 's/-/+/' | sed 's/^v//'

tasks:
  default:
    desc: Build for the current platform
    cmds:
      - task: default:build

  default:setup:
    desc: Install required tools that are not part of go.mod
    cmds:
      - go install golang.org/x/tools/cmd/stringer

  default:generate:
    desc: Runs code generation
    cmds:
      - go generate ./...

  default:prepare:
    run: once
    summary: Prepares the dist folder
    cmds:
      - mkdir -p {{.FOLDER_DIST}}

  default:test:
    run: once
    summary: Performs all tests
    cmds:
      - go test -cover -race ./...

  default:build-for-nonstatic:
    vars:
      ARCH_FOLDER: "{{.FOLDER_DIST}}/{{.GOOS}}_{{.GOARCH}}"
      OUTPUT: "{{.ARCH_FOLDER}}/{{.NAME}}{{.EXTENSION}}"

    cmds:
      - >-
        go build -trimpath
        -ldflags="-w -s
        -X main.name="{{.NAME}}{{.EXTENSION}}"
        -X main.version="{{.GIT_COMMIT}}"
        -X main.realm="{{.REALM}}""
        -a
        -buildvcs=false
        -o {{.OUTPUT}}
        {{.MAIN}}

    generates:
      - "{{.OUTPUT}}"

    env:
      GOOS: "{{.GOOS}}"
      GOARCH: "{{.GOARCH}}"
      GOARM: "{{.GOARM}}"

  default:build-for:
    vars:
      ARCH_FOLDER: "{{.FOLDER_DIST}}/{{.GOOS}}_{{.GOARCH}}"
      OUTPUT: "{{.ARCH_FOLDER}}/{{.NAME}}{{.EXTENSION}}"

    cmds:
      - >-
        go build -trimpath
        -ldflags="-w -s
        -X main.name="{{.NAME}}{{.EXTENSION}}"
        -X main.version="{{.GIT_COMMIT}}"
        -X main.realm="{{.REALM}}"
        -extldflags '-static'" -a
        -buildvcs=false
        -o {{.OUTPUT}}
        {{.MAIN}}

    generates:
      - "{{.OUTPUT}}"

    env:
      GOOS: "{{.GOOS}}"
      GOARCH: "{{.GOARCH}}"
      GOARM: "{{.GOARM}}"

  tui:build:
    summary: Builds the TUI interface for the current platform
    vars:
      ARCH_FOLDER: "{{.FOLDER_DIST}}/{{OS}}_{{ARCH}}"

    deps:
      - default:prepare
      - default:test

    cmds:
      - task: default:build-for
        vars:
          NAME: "{{.MP3BINDER_CLI_NAME}}"
          MAIN: "{{.MP3BINDER_CLI_MAIN}}"
          GOOS: "{{OS}}"
          GOARCH: "{{ARCH}}"
          EXTENSION: "{{exeExt}}"

  #gui:build:
  #  summary: Builds the GUI interface for the current platform
  #  vars:
  #    ARCH_FOLDER: "{{.FOLDER_DIST}}/{{OS}}_{{ARCH}}"
  #
  #  deps:
  #    - default:prepare
  #    - default:test
  #
  #  cmds:
  #    - task: default:build-for-nonstatic
  #      vars:
  #        NAME: "{{.MP3BINDER_NAME}}"
  #        MAIN: "{{.MP3BINDER_MAIN}}"
  #        GOOS: "{{OS}}"
  #        GOARCH: "{{ARCH}}"
  #        EXTENSION: "{{exeExt}}"

  default:build:
    summary: Builds for the current platform
    vars:
      ARCH_FOLDER: "{{.FOLDER_DIST}}/{{OS}}_{{ARCH}}"

    deps:
      - default:prepare
      - default:test

    cmds:
      - task: tui:build
      #- task: gui:build

  default:zip:
    summary: Zips the folder
    cmds:
      - cd "{{.FOLDER}}" && zip -r "../$(basename {{.FOLDER}}).zip" .
    generates:
      - "{{.FOLDER}}.zip"

  default:build-all:
    desc: Build the binaries for multiple architectures.
    deps:
      - default:prepare
      - default:test

    cmds:
      # macOS intel
      - task: default:build-for
        vars:
          NAME: "{{.MP3BINDER_CLI_NAME}}"
          MAIN: "{{.MP3BINDER_CLI_MAIN}}"
          GOOS: "darwin"
          GOARCH: "amd64"
          EXTENSION: ""

      - task: default:zip
        vars:
          FOLDER: "{{.FOLDER_DIST}}/darwin_amd64"

      # macOS Apple silicon
      - task: default:build-for
        vars:
          NAME: "{{.MP3BINDER_CLI_NAME}}"
          MAIN: "{{.MP3BINDER_CLI_MAIN}}"
          GOOS: "darwin"
          GOARCH: "arm64"
          EXTENSION: ""

      - task: default:zip
        vars:
          FOLDER: "{{.FOLDER_DIST}}/darwin_arm64"

      # TODO: move to specific build
      - >-
        {{if eq OS "darwin"}}
        mkdir -p {{.FOLDER_DIST}}/darwin_universal &&
        lipo -create -output {{.FOLDER_DIST}}/darwin_universal/{{.MP3BINDER_CLI_NAME}} {{.FOLDER_DIST}}/darwin_amd64/{{.MP3BINDER_CLI_NAME}} {{.FOLDER_DIST}}/darwin_arm64/{{.MP3BINDER_CLI_NAME}} &&
        cd {{.FOLDER_DIST}}/darwin_universal/ && zip -r "../darwin_universal.zip" .
        {{end}}

      # linux 64
      - task: default:build-for
        vars:
          NAME: "{{.MP3BINDER_CLI_NAME}}"
          MAIN: "{{.MP3BINDER_CLI_MAIN}}"
          GOOS: "linux"
          GOARCH: "amd64"
          EXTENSION: ""

      - task: default:zip
        vars:
          FOLDER: "{{.FOLDER_DIST}}/linux_amd64"

      # windows 64
      - task: default:build-for
        vars:
          NAME: "{{.MP3BINDER_CLI_NAME}}"
          MAIN: "{{.MP3BINDER_CLI_MAIN}}"
          GOOS: "windows"
          GOARCH: "amd64"
          EXTENSION: ".exe"

      - task: default:zip
        vars:
          FOLDER: "{{.FOLDER_DIST}}/windows_amd64"
